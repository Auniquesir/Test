name: file links

on:
  workflow_dispatch:  # 通过手动触发工作流

jobs:
  ExtractLinks:
    runs-on: ubuntu-24.04  # 在 Ubuntu 24.04 环境下运行
    env:
      TZ: 'Asia/Shanghai'  # 设置时区为上海时间

    steps:
    # 步骤 1: 检出目标仓库
    - name: Checkout target repository
      uses: actions/checkout@v4.2.2  # 使用 actions/checkout 获取当前仓库代码

    # 步骤 2: 克隆目标仓库 (blackmatrix7/ios_rule_script)
    - name: Clone the ios_rule_script repository
      run: |
        git clone https://github.com/blackmatrix7/ios_rule_script.git  # 克隆目标仓库

    # 步骤 3: 解析 .list 文件并提取链接
    - name: Parse .list files and extract links
      run: |
        # 定义 .list 文件的基础 URL
        BASE_URL="https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX"
        # 创建或清空输出文件 links.txt
        OUTPUT_FILE="links.txt"
        > $OUTPUT_FILE  # 清空文件

        # 查找所有 .list 文件并提取链接
        for file in $(find ios_rule_script/rule/QuantumultX -name "*.list"); do
          echo "Processing file: $file"  # 输出当前处理的文件

          # 检查文件是否存在
          if [ ! -f "$file" ]; then
            echo "File not found: $file"
            continue
          fi

          # 使用 grep 提取文件中的 .list 文件下载链接，并追加到 links.txt 中
          links=$(grep -o 'https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/QuantumultX[^"]*\.list' "$file" || echo "grep failed")

          # 检查是否找到链接
          if [ -z "$links" ]; then
            echo "No links found in $file"
          else
            echo "$links" >> $OUTPUT_FILE  # 如果找到链接，则追加到 links.txt
          fi
        done

        # 输出链接内容，供调试
        echo "Extracted links:"
        cat $OUTPUT_FILE

    # 步骤 4: 将 links.txt 作为工作流产物上传
    - name: Upload links.txt as artifact
      uses: actions/upload-artifact@v3  # 上传 links.txt 文件作为工作流产物
      with:
        name: links-file  # 设置上传的产物名称为 links-file
        path: links.txt  # 上传 links.txt 文件

    # 步骤 5: 添加并提交更改
    - name: Add and Commit
      run: |
        # 如果有更改，提交更改
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "action@github.com"  # 配置提交者邮箱
          git config --local user.name "GitHub Action"  # 配置提交者名字
          git add -A  # 添加所有更改
          git commit -m "Auto Update $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"  # 提交更改
          git pull --rebase origin X  # 拉取远程 X 分支的最新提交
          git push origin X  # 推送本地更改到远程 X 分支
        else
          echo "No changes to commit."  # 如果没有更改，则输出提示信息
        fi

    # 清理工作流：删除历史工作流记录
    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main  # 使用 Mattraks 的 GitHub Action 清理工作流记录
      with:
        retain_days: 0  # 不保留任何工作流记录
        keep_minimum_runs: 2  # 保留至少两个最小的工作流运行记录
